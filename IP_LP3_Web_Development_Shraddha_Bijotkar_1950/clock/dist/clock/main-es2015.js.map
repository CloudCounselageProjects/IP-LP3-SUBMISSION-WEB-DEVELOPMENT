{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/apis.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { from, Observable, throwError } from 'rxjs';\nimport { T } from './t';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApisService {\n  info : string\n  constructor(private httpClient: HttpClient) {  }\n\n  getTime() : Observable<T[]> {\n    return this.httpClient.get<T[]>('http://localhost:5000', {observe : \"body\"})\n   \n  } \n \n}\n","import { Component } from '@angular/core';\nimport { ApisService } from './apis.service'\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(private apis : ApisService , private http : HttpClient){}\n  T ;\n  info ;\nonClick(){\n  return this.apis\n  .getTime()\n  .subscribe((data) => {\n    this.T = data,\n    //JSON.stringify(Times);\n    console.log(this.T)})\n}\n\n  title = 'clock';\n}\n","<link href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" rel=\"stylesheet\">\n<div>\n  <mat-toolbar color=\"primary\"><span>TIME IS MONEY</span></mat-toolbar>\n\n<br>\n</div>\n\n<div class=\"divi\">\n\n\n<div class=\"col-sm-3 col-md-6\" style=\"text-align: center;display: flex; justify-content: center; align-content: center;  max-width: 500px; max-height: 400px;\">\n  <mat-card class=\"example-card\">\n    <mat-card-header>\n      <div mat-card-avatar class=\"example-header-image\" style=\"align-items: center\"></div>\n      <mat-card-title style=\"align-items: center;\">INDIA </mat-card-title>\n      <mat-card-subtitle style=\"align-items: center;\">IST - Indian Standard Time</mat-card-subtitle>\n    </mat-card-header>\n    <img mat-card-image src=\"../assets/india.jpg\" alt=\"INDIA\">\n    <mat-card-content>\n      <p class=\"div3\">\n        *India, officially the Republic of India\n       is a country in South Asia. It is the second-most populous country, the seventh-largest country by area, and the most populous democracy in the world. \n      </p>\n    </mat-card-content>\n    \n\n  </mat-card>\n\n  </div>\n  <div class=\"col-sm-9 col-md-6\">\n  <button style=\" margin-left: 80px !important; margin-top: 50px !important;\" mat-button class= \"button button1\"  (click)=\"onClick()\">WHAT'S THE TIME?</button>\n  <div class=\"div2\">\n\n<h3 class=\"div3\">Time in  \" {{T.timezone}} \"  is :  {{T.datetime.slice(11,19)}}  and date is : {{T.datetime.slice(0,10)}}</h3>\n\n<h3 class=\"div3\">It's week {{T.week_number}} of year {{T.datetime.slice(0,4)}} in INDIA!</h3>\n</div>\n</div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { ApisService } from './apis.service';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport {MatCardModule } from '@angular/material/card';\nimport {MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n  import { from } from 'rxjs';\n  @NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule\n  ],\n  providers: [ApisService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}